{
  "data": {
      "type": "provider-docs",
      "id": "2395778",
      "attributes": {
          "category": "resources",
          "content": "---\nlayout: \"azuredevops\"\npage_title: \"AzureDevops: azuredevops_build_definition\"\ndescription: |-\n  Manages a Build Definition within Azure DevOps organization.\n---\n\n# azuredevops_build_definition\n\nManages a Build Definition within Azure DevOps.\n\n## Example Usage\n\n### Tfs\n```hcl\nresource \"azuredevops_project\" \"example\" {\n  name               = \"Example Project\"\n  visibility         = \"private\"\n  version_control    = \"Git\"\n  work_item_template = \"Agile\"\n}\n\nresource \"azuredevops_git_repository\" \"example\" {\n  project_id = azuredevops_project.example.id\n  name       = \"Example Repository\"\n  initialization {\n    init_type = \"Clean\"\n  }\n}\n\nresource \"azuredevops_variable_group\" \"example\" {\n  project_id   = azuredevops_project.example.id\n  name         = \"Example Pipeline Variables\"\n  description  = \"Managed by Terraform\"\n  allow_access = true\n\n  variable {\n    name  = \"FOO\"\n    value = \"BAR\"\n  }\n}\n\nresource \"azuredevops_build_definition\" \"example\" {\n  project_id = azuredevops_project.example.id\n  name       = \"Example Build Definition\"\n  path       = \"\\\\ExampleFolder\"\n\n  ci_trigger {\n    use_yaml = false\n  }\n\n  schedules {\n    branch_filter {\n      include = [\"master\"]\n      exclude = [\"test\", \"regression\"]\n    }\n    days_to_build              = [\"Wed\", \"Sun\"]\n    schedule_only_with_changes = true\n    start_hours                = 10\n    start_minutes              = 59\n    time_zone                  = \"(UTC) Coordinated Universal Time\"\n  }\n\n  repository {\n    repo_type   = \"TfsGit\"\n    repo_id     = azuredevops_git_repository.example.id\n    branch_name = azuredevops_git_repository.example.default_branch\n    yml_path    = \"azure-pipelines.yml\"\n  }\n\n  variable_groups = [\n    azuredevops_variable_group.example.id\n  ]\n\n  variable {\n    name  = \"PipelineVariable\"\n    value = \"Go Microsoft!\"\n  }\n\n  variable {\n    name         = \"PipelineSecret\"\n    secret_value = \"ZGV2cw\"\n    is_secret    = true\n  }\n}\n```\n\n### GitHub Enterprise\n```hcl\nresource \"azuredevops_project\" \"example\" {\n  name               = \"Example Project\"\n  visibility         = \"private\"\n  version_control    = \"Git\"\n  work_item_template = \"Agile\"\n}\n\nresource \"azuredevops_serviceendpoint_github_enterprise\" \"example\" {\n  project_id            = azuredevops_project.example.id\n  service_endpoint_name = \"Example GitHub Enterprise\"\n  url                   = \"https://github.contoso.com\"\n  description           = \"Managed by Terraform\"\n\n  auth_personal {\n    personal_access_token = \"xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx\"\n  }\n}\n\nresource \"azuredevops_build_definition\" \"example\" {\n  project_id = azuredevops_project.example.id\n  name       = \"Example Build Definition\"\n  path       = \"\\\\ExampleFolder\"\n\n  ci_trigger {\n    use_yaml = false\n  }\n\n  repository {\n    repo_type             = \"GitHubEnterprise\"\n    repo_id               = \"<GitHub Org>/<Repo Name>\"\n    github_enterprise_url = \"https://github.company.com\"\n    branch_name           = \"master\"\n    yml_path              = \"azure-pipelines.yml\"\n    service_connection_id = azuredevops_serviceendpoint_github_enterprise.example.id\n  }\n\n  schedules {\n    branch_filter {\n      include = [\"main\"]\n      exclude = [\"test\", \"regression\"]\n    }\n    days_to_build              = [\"Wed\", \"Sun\"]\n    schedule_only_with_changes = true\n    start_hours                = 10\n    start_minutes              = 59\n    time_zone                  = \"(UTC) Coordinated Universal Time\"\n  }\n}\n```\n\n## Argument Reference\n\nThe following arguments are supported:\n\n- `project_id` - (Required) The project ID or project name.\n- `name` - (Optional) The name of the build definition.\n- `path` - (Optional) The folder path of the build definition.\n- `agent_pool_name` - (Optional) The agent pool that should execute the build. Defaults to `Azure Pipelines`.\n- `repository` - (Required) A `repository` block as documented below.\n- `ci_trigger` - (Optional) Continuous Integration trigger.\n- `pull_request_trigger` - (Optional) Pull Request Integration Integration trigger.\n- `variable_groups` - (Optional) A list of variable group IDs (integers) to link to the build definition.\n- `variable` - (Optional) A list of `variable` blocks, as documented below.\n\n`variable` block supports the following:\n\n- `name` - (Required) The name of the variable.\n- `value` - (Optional) The value of the variable.\n- `secret_value` - (Optional) The secret value of the variable. Used when `is_secret` set to `true`.\n- `is_secret` - (Optional) True if the variable is a secret. Defaults to `false`.\n- `allow_override` - (Optional) True if the variable can be overridden. Defaults to `true`.\n\n`repository` block supports the following:\n\n- `branch_name` - (Optional) The branch name for which builds are triggered. Defaults to `master`.\n- `repo_id` - (Required) The id of the repository. For `TfsGit` repos, this is simply the ID of the repository. For `Github` repos, this will take the form of `<GitHub Org>/<Repo Name>`. For `Bitbucket` repos, this will take the form of `<Workspace ID>/<Repo Name>`.\n- `repo_type` - (Optional) The repository type. Valid values: `GitHub` or `TfsGit` or `Bitbucket` or `GitHub Enterprise`. Defaults to `GitHub`. If `repo_type` is `GitHubEnterprise`, must use existing project and GitHub Enterprise service connection.\n- `service_connection_id` - (Optional) The service connection ID. Used if the `repo_type` is `GitHub` or `GitHubEnterprise`.\n- `yml_path` - (Required) The path of the Yaml file describing the build definition.\n- `github_enterprise_url` - (Optional) The Github Enterprise URL. Used if `repo_type` is `GithubEnterprise`.\n- `report_build_status` - (Optional) Report build status. Default is true.\n\n`ci_trigger` block supports the following:\n\n- `use_yaml` - (Optional) Use the azure-pipeline file for the build configuration. Defaults to `false`.\n- `override` - (Optional) Override the azure-pipeline file and use a this configuration for all builds.\n\n`ci_trigger` `override` block supports the following:\n\n- `batch` - (Optional) If you set batch to true, when a pipeline is running, the system waits until the run is completed, then starts another run with all changes that have not yet been built. Defaults to `true`.\n- `branch_filter` - (Optional) The branches to include and exclude from the trigger.\n- `path_filter` - (Optional) Specify file paths to include or exclude. Note that the wildcard syntax is different between branches/tags and file paths.\n- `max_concurrent_builds_per_branch` - (Optional) The number of max builds per branch. Defaults to `1`.\n- `polling_interval` - (Optional) How often the external repository is polled. Defaults to `0`.\n- `polling_job_id` - (Computed) This is the ID of the polling job that polls the external repository. Once the build definition is saved/updated, this value is set.\n\n`pull_request_trigger` block supports the following:\n\n- `use_yaml` - (Optional) Use the azure-pipeline file for the build configuration. Defaults to `false`.\n- `initial_branch` - (Optional) When use_yaml is true set this to the name of the branch that the azure-pipelines.yml exists on. Defaults to `Managed by Terraform`.\n- `forks` - (Required) Set permissions for Forked repositories.\n- `override` - (Optional) Override the azure-pipeline file and use this configuration for all builds.\n\n`forks` block supports the following:\n\n- `enabled` - (Required) Build pull requests form forms of this repository.\n- `share_secrets` - (Required) Make secrets available to builds of forks.\n\n`pull_request_trigger` `override` block supports the following:\n\n- `auto_cancel` - (Optional) . Defaults to `true`.\n- `branch_filter` - (Optional) The branches to include and exclude from the trigger.\n- `path_filter` - (Optional) Specify file paths to include or exclude. Note that the wildcard syntax is different between branches/tags and file paths.\n\n- `branch_filter` block supports the following:\n\n- `include` - (Optional) List of branch patterns to include.\n- `exclude` - (Optional) List of branch patterns to exclude.\n\n- `path_filter` block supports the following:\n\n- `include` - (Optional) List of path patterns to include.\n- `exclude` - (Optional) List of path patterns to exclude.\n\n`schedules` block supports the following:\n\n-> **Note:** Schedule pipeline will not use any schedules defined in the YAML file. To use schedules from the YAML file, delete all scheduled triggers.\n\n- `days_to_build`: (Required) When to build. Valid values: `Mon`, `Tue`, `Wed`, `Thu`, `Fri`, `Sat`, `Sun`.\n- `schedule_only_with_changes`: (Optional) Schedule builds if the source or pipeline has changed. Defaults to `true`.\n- `start_hours`: (Optional) Build start hour. Defaults to `0`. Valid values: `0 ~ 23`.\n- `start_minutes`: (Optional) Build start minute. Defaults to `0`. Valid values: `0 ~ 59`.\n- `time_zone`: (Optional) Build time zone. Defaults to `(UTC) Coordinated Universal Time`. Valid values: \n  `(UTC-12:00) International Date Line West`,   \n  `(UTC-11:00) Coordinated Universal Time-11`,   \n  `(UTC-10:00) Aleutian Islands`,   \n  `(UTC-10:00) Hawaii`,   \n  `(UTC-09:30) Marquesas Islands`,   \n  `(UTC-09:00) Alaska`,   \n  `(UTC-09:00) Coordinated Universal Time-09`,   \n  `(UTC-08:00) Baja California`,   \n  `(UTC-08:00) Coordinated Universal Time-08`,   \n  `(UTC-08:00) Pacific Time (US &Canada)`,   \n  `(UTC-07:00) Arizona`,   \n  `(UTC-07:00) Chihuahua, La Paz, Mazatlan`,   \n  `(UTC-07:00) Mountain Time (US &Canada)`,   \n  `(UTC-07:00) Yukon`,   \n  `(UTC-06:00) Central America`,   \n  `(UTC-06:00) Central Time (US &Canada)`,   \n  `(UTC-06:00) Easter Island`,   \n  `(UTC-06:00) Guadalajara, Mexico City, Monterrey`,   \n  `(UTC-06:00) Saskatchewan`,   \n  `(UTC-05:00) Bogota, Lima, Quito, Rio Branco`,   \n  `(UTC-05:00) Chetumal`,   \n  `(UTC-05:00) Eastern Time (US &Canada)`,   \n  `(UTC-05:00) Haiti`,   \n  `(UTC-05:00) Havana`,   \n  `(UTC-05:00) Indiana (East)`,   \n  `(UTC-05:00) Turks and Caicos`,   \n  `(UTC-04:00) Asuncion`,   \n  `(UTC-04:00) Atlantic Time (Canada)`,   \n  `(UTC-04:00) Caracas`,   \n  `(UTC-04:00) Cuiaba`,   \n  `(UTC-04:00) Georgetown, La Paz, Manaus, San Juan`,   \n  `(UTC-04:00) Santiago`,   \n  `(UTC-03:30) Newfoundland`,   \n  `(UTC-03:00) Araguaina`,   \n  `(UTC-03:00) Brasilia`,   \n  `(UTC-03:00) Cayenne, Fortaleza`,   \n  `(UTC-03:00) City of Buenos Aires`,   \n  `(UTC-03:00) Greenland`,   \n  `(UTC-03:00) Montevideo`,   \n  `(UTC-03:00) Punta Arenas`,   \n  `(UTC-03:00) Saint Pierre and Miquelon`,   \n  `(UTC-03:00) Salvador`,   \n  `(UTC-02:00) Coordinated Universal Time-02`,   \n  `(UTC-02:00) Mid-Atlantic - Old`,   \n  `(UTC-01:00) Azores`,   \n  `(UTC-01:00) Cabo Verde Is.`,   \n  `(UTC) Coordinated Universal Time`,   \n  `(UTC+00:00) Dublin, Edinburgh, Lisbon, London`,   \n  `(UTC+00:00) Monrovia, Reykjavik`,   \n  `(UTC+00:00) Sao Tome`,   \n  `(UTC+01:00) Casablanca`,   \n  `(UTC+01:00) Amsterdam, Berlin, Bern, Rome, Stockholm, Vienna`,   \n  `(UTC+01:00) Belgrade, Bratislava, Budapest, Ljubljana, Prague`,   \n  `(UTC+01:00) Brussels, Copenhagen, Madrid, Paris`,   \n  `(UTC+01:00) Sarajevo, Skopje, Warsaw, Zagreb`,   \n  `(UTC+01:00) West Central Africa`,   \n  `(UTC+02:00) Amman`,   \n  `(UTC+02:00) Athens, Bucharest`,   \n  `(UTC+02:00) Beirut`,   \n  `(UTC+02:00) Cairo`,   \n  `(UTC+02:00) Chisinau`,   \n  `(UTC+02:00) Damascus`,   \n  `(UTC+02:00) Gaza, Hebron`,   \n  `(UTC+02:00) Harare, Pretoria`,   \n  `(UTC+02:00) Helsinki, Kyiv, Riga, Sofia, Tallinn, Vilnius`,   \n  `(UTC+02:00) Jerusalem`,   \n  `(UTC+02:00) Juba`,   \n  `(UTC+02:00) Kaliningrad`,   \n  `(UTC+02:00) Khartoum`,   \n  `(UTC+02:00) Tripoli`,   \n  `(UTC+02:00) Windhoek`,   \n  `(UTC+03:00) Baghdad`,   \n  `(UTC+03:00) Istanbul`,   \n  `(UTC+03:00) Kuwait, Riyadh`,   \n  `(UTC+03:00) Minsk`,   \n  `(UTC+03:00) Moscow, St. Petersburg`,   \n  `(UTC+03:00) Nairobi`,   \n  `(UTC+03:00) Volgograd`,   \n  `(UTC+03:30) Tehran`,   \n  `(UTC+04:00) Abu Dhabi, Muscat`,   \n  `(UTC+04:00) Astrakhan, Ulyanovsk`,   \n  `(UTC+04:00) Baku`,   \n  `(UTC+04:00) Izhevsk, Samara`,   \n  `(UTC+04:00) Port Louis`,   \n  `(UTC+04:00) Saratov`,   \n  `(UTC+04:00) Tbilisi`,   \n  `(UTC+04:00) Yerevan`,   \n  `(UTC+04:30) Kabul`,   \n  `(UTC+05:00) Ashgabat, Tashkent`,   \n  `(UTC+05:00) Ekaterinburg`,   \n  `(UTC+05:00) Islamabad, Karachi`,   \n  `(UTC+05:00) Qyzylorda`,   \n  `(UTC+05:30) Chennai, Kolkata, Mumbai, New Delhi`,   \n  `(UTC+05:30) Sri Jayawardenepura`,   \n  `(UTC+05:45) Kathmandu`,   \n  `(UTC+06:00) Astana`,   \n  `(UTC+06:00) Dhaka`,   \n  `(UTC+06:00) Omsk`,   \n  `(UTC+06:30) Yangon (Rangoon)`,   \n  `(UTC+07:00) Bangkok, Hanoi, Jakarta`,   \n  `(UTC+07:00) Barnaul, Gorno-Altaysk`,   \n  `(UTC+07:00) Hovd`,   \n  `(UTC+07:00) Krasnoyarsk`,   \n  `(UTC+07:00) Novosibirsk`,   \n  `(UTC+07:00) Tomsk`,   \n  `(UTC+08:00) Beijing, Chongqing, Hong Kong, Urumqi`,   \n  `(UTC+08:00) Irkutsk`,   \n  `(UTC+08:00) Kuala Lumpur, Singapore`,   \n  `(UTC+08:00) Perth`,   \n  `(UTC+08:00) Taipei`,   \n  `(UTC+08:00) Ulaanbaatar`,   \n  `(UTC+08:45) Eucla`,   \n  `(UTC+09:00) Chita`,   \n  `(UTC+09:00) Osaka, Sapporo, Tokyo`,   \n  `(UTC+09:00) Pyongyang`,   \n  `(UTC+09:00) Seoul`,   \n  `(UTC+09:00) Yakutsk`,   \n  `(UTC+09:30) Adelaide`,   \n  `(UTC+09:30) Darwin`,   \n  `(UTC+10:00) Brisbane`,   \n  `(UTC+10:00) Canberra, Melbourne, Sydney`,   \n  `(UTC+10:00) Guam, Port Moresby`,   \n  `(UTC+10:00) Hobart`,   \n  `(UTC+10:00) Vladivostok`,   \n  `(UTC+10:30) Lord Howe Island`,   \n  `(UTC+11:00) Bougainville Island`,   \n  `(UTC+11:00) Chokurdakh`,   \n  `(UTC+11:00) Magadan`,   \n  `(UTC+11:00) Norfolk Island`,   \n  `(UTC+11:00) Sakhalin`,   \n  `(UTC+11:00) Solomon Is., New Caledonia`,   \n  `(UTC+12:00) Anadyr, Petropavlovsk-Kamchatsky`,   \n  `(UTC+12:00) Auckland, Wellington`,   \n  `(UTC+12:00) Coordinated Universal Time+12`,   \n  `(UTC+12:00) Fiji`,   \n  `(UTC+12:00) Petropavlovsk-Kamchatsky - Old`,   \n  `(UTC+12:45) Chatham Islands`,   \n  `(UTC+13:00) Coordinated Universal Time+13`,   \n  `(UTC+13:00) Nuku'alofa`,   \n  `(UTC+13:00) Samoa`,   \n  `(UTC+14:00) Kiritimati Island`.\n- `branch_filter` block supports the following:\n\n- `include` - (Optional) List of branch patterns to include.\n- `exclude` - (Optional) List of branch patterns to exclude.\n\n\n## Attributes Reference\n\nIn addition to all arguments above, the following attributes are exported:\n\n- `id` - The ID of the build definition\n- `revision` - The revision of the build definition\n\n---\nThe `schedules` block exports the following:\n\n- `schedule_job_id` - The ID of the schedule job \n\n## Remarks\n\nThe path attribute can not end in `\\` unless the path is the root value of `\\`. \n\nValid path values (yaml encoded) include:\n- `\\\\`\n- `\\\\ExampleFolder`\n- `\\\\Nested\\\\Example Folder`\n\nThe value of `\\\\ExampleFolder\\\\` would be invalid.\n\n## Relevant Links\n\n- [Azure DevOps Service REST API 6.0 - Build Definitions](https://docs.microsoft.com/en-us/rest/api/azure/devops/build/definitions?view=azure-devops-rest-6.0)\n\n## Import\n\nAzure DevOps Build Definitions can be imported using the project name/definitions Id or by the project Guid/definitions Id, e.g.\n\n```sh\nterraform import azuredevops_build_definition.example \"Example Project\"/10\n```\n\nor\n\n```sh\nterraform import azuredevops_build_definition.example 00000000-0000-0000-0000-000000000000/0\n```\n",
          "path": "website/docs/r/build_definition.html.markdown",
          "slug": "build_definition",
          "subcategory": null,
          "title": "build_definition",
          "truncated": false
      },
      "links": {
          "self": "/v2/provider-docs/2395778"
      }
  }
}